[tool.poetry]
name = "bugbounty-gpt"
version = "0.1.0"
description = "A helpful gpt-based triage tool for BugCrowd bugbounty programs."

authors = ["Jake McNeil <mcneil@openai.com>"]

readme = "README.md"
packages = [
    {include = "bugbounty_gpt"},
]
include = ["bugbounty_gpt/CHANGELOG.md", "bugbounty_gpt/py.typed"]

[tool.poetry.dependencies]
python = "==3.11.*"
alembic = "1.12.1"
asyncpg = "0.28.0"
httpx = "0.25.0"
idna = "3.4"
iniconfig = "2.0.0"
Mako = "1.2.4"
MarkupSafe = "2.1.3"
multidict = "6.0.4"
openai = "0.28.1"
psycopg2-binary = "2.9.9"
SQLAlchemy = {version = "2.0.22", extras = ["mypy"]}
pyyaml = "^6.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-mock = "*"
pytest-asyncio = "^0.20.3"
pytest-cov = "^2.11.1"
mypy = "^1.2.0"
safety = "^2.0.0"
taskipy = "^1.6.0"
types-pyyaml = "^6.0.12.12"
ruff = "^0.1.3"

[tool.taskipy.tasks]
check = "task security && task style && task types && task lint && task test"
security = """poetry export -f requirements.txt | poetry run safety check --bare --stdin"""
style = """ruff format ."""
types = "mypy bugbounty_gpt"
lint = "ruff check . --fix"
test = "pytest --cov=bugbounty_gpt --cov-report term-missing"

[tool.ruff]
line-length = 120